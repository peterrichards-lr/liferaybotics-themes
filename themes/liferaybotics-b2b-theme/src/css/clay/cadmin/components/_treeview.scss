.treeview {
	@include clay-css($cadmin-treeview);

	.btn {
		$btn: setter(map-get($cadmin-treeview, btn), ());

		@include clay-button-variant($btn);
	}

	.btn-monospaced {
		$btn-monospaced: setter(map-get($cadmin-treeview, btn-monospaced), ());

		@include clay-button-variant($btn-monospaced);
	}

	.custom-control {
		$custom-control: setter(map-get($cadmin-treeview, custom-control), ());

		@include clay-css($custom-control);
	}

	.component-expander {
		$component-expander: setter(
			map-get($cadmin-treeview, component-expander),
			()
		);

		@include clay-button-variant($component-expander);

		.lexicon-icon:not(.component-expanded-d-none) {
			display: none;
		}
	}

	.component-action {
		$component-action: setter(
			map-get($cadmin-treeview, component-action),
			()
		);

		@include clay-button-variant($component-action);
	}

	.component-icon {
		$component-icon: setter(map-get($cadmin-treeview, component-icon), ());

		@include clay-css($component-icon);

		.lexicon-icon {
			$lexicon-icon: setter(map-get($component-icon, lexicon-icon), ());

			@include clay-css($lexicon-icon);
		}
	}

	.component-text {
		$component-text: setter(map-get($cadmin-treeview, component-text), ());

		@include clay-css($component-text);
	}

	&.show-component-expander-on-hover {
		@include clay-css($cadmin-treeview-show-component-expander-on-hover);

		&:hover,
		&.hover {
			$hover: setter(
				map-get(
					$cadmin-treeview-show-component-expander-on-hover,
					hover
				),
				()
			);

			@include clay-css($hover);

			.component-expander {
				$component-expander: setter(
					map-get($hover, component-expander),
					()
				);

				@include clay-css($component-expander);
			}
		}

		.treeview-link {
			$treeview-link: setter(
				map-get(
					$cadmin-treeview-show-component-expander-on-hover,
					treeview-link
				),
				()
			);

			@include clay-css($treeview-link);

			&:focus,
			&.focus {
				$focus: setter(map-get($treeview-link, focus), ());

				@include clay-css($focus);

				.component-expander {
					$component-expander: setter(
						map-get($focus, component-expander)
					);

					@include clay-css($component-expander);
				}
			}
		}

		.component-expander {
			$component-expander: setter(
				map-get(
					$cadmin-treeview-show-component-expander-on-hover,
					component-expander
				),
				()
			);

			@include clay-css($component-expander);
		}
	}
}

.treeview-group {
	$group: setter(map-get($cadmin-treeview, treeview-group), ());

	@include clay-css($group);
}

.treeview-item {
	$item: setter(map-get($cadmin-treeview, treeview-item), ());

	@include clay-css($item);

	&:last-child {
		$last-child: setter(map-get($item, last-child), ());

		@include clay-css($last-child);
	}

	&.disabled {
		cursor: $cadmin-disabled-cursor;
		opacity: 0.4;

		.treeview-dropping {
			&-bottom,
			&-middle,
			&-top {
				border-color: transparent;
				background-color: transparent;
			}
		}
	}
}

.treeview-link {
	$link: setter(map-get($cadmin-treeview, link), ());

	@include clay-link($link);

	&.treeview-dropping {
		$dropping: setter(map-get($link, dropping), ());

		&-bottom {
			$dropping-bottom: setter(map-get($dropping, bottom), ());

			@include clay-css($dropping-bottom);
		}

		&-middle {
			$dropping-middle: setter(map-get($dropping, middle), ());

			@include clay-css($dropping-middle);
		}

		&-top {
			$dropping-top: setter(map-get($dropping, top), ());

			@include clay-css($dropping-top);
		}
	}

	&.hover,
	&:hover,
	&.focus,
	&:focus {
		.component-action {
			display: block;
		}
	}

	&.show,
	&[aria-expanded='true'] {
		.component-expander {
			.component-expanded-d-none {
				display: none;
			}

			.lexicon-icon:not(.component-expanded-d-none) {
				display: inline-block;
			}
		}
	}
}

.treeview-nested-margins {
	@include clay-css($cadmin-treeview-nested-margins);

	.treeview-group {
		$group: setter(
			map-get($cadmin-treeview-nested-margins, treeview-group),
			()
		);

		@include clay-css($group);

		.treeview-item {
			$item: setter(map-get($group, treeview-item), ());

			@include clay-css($item);
		}
	}
}

.treeview-dragging {
	$dragging: setter(map-get($cadmin-treeview, treeview-dragging), ());

	@include clay-css($dragging);
}

// Treeview Variants

.treeview-light {
	@include clay-css($cadmin-treeview-light);

	.btn {
		$btn: setter(map-get($cadmin-treeview-light, btn), ());

		@include clay-button-variant($btn);
	}

	.btn-monospaced {
		$btn-monospaced: setter(
			map-get($cadmin-treeview-light, btn-monospaced),
			()
		);

		@include clay-button-variant($btn-monospaced);
	}

	.component-expander {
		$component-expander: setter(
			map-get($cadmin-treeview-light, component-expander),
			()
		);

		@include clay-button-variant($component-expander);

		&.btn-secondary {
			$btn-secondary: setter(
				map-get($component-expander, btn-secondary),
				()
			);

			@include clay-button-variant($btn-secondary);
		}
	}

	.custom-control {
		$custom-control: setter(
			map-get($cadmin-treeview-light, custom-control),
			()
		);

		@include clay-css($custom-control);
	}

	.treeview-group {
		$group: setter(map-get($cadmin-treeview-light, treeview-group), ());

		@include clay-css($group);
	}

	.treeview-item {
		$item: setter(map-get($cadmin-treeview-light, treeview-item), ());

		@include clay-css($item);

		&:last-child {
			$last-child: setter(map-get($item, last-child), ());

			@include clay-css($last-child);
		}
	}

	.treeview-link {
		$link: setter(map-get($cadmin-treeview-light, link), ());

		@include clay-link($link);
	}

	.component-action {
		$component-action: setter(
			map-get($cadmin-treeview-light, component-action),
			()
		);

		@include clay-button-variant($component-action);
	}

	.component-icon {
		$component: setter(map-get($cadmin-treeview-light, component), ());

		@include clay-css($component);
	}

	.component-text {
		$component: setter(map-get($cadmin-treeview-light, component), ());

		@include clay-css($component);
	}
}

.treeview-dark {
	@include clay-css($cadmin-treeview-dark);

	.btn {
		$btn: setter(map-get($cadmin-treeview-dark, btn), ());

		@include clay-button-variant($btn);
	}

	.btn-monospaced {
		$btn-monospaced: setter(
			map-get($cadmin-treeview-dark, btn-monospaced),
			()
		);

		@include clay-button-variant($btn-monospaced);
	}

	.component-expander {
		$component-expander: setter(
			map-get($cadmin-treeview-dark, component-expander),
			()
		);

		@include clay-button-variant($component-expander);

		&.btn-secondary {
			$btn-secondary: setter(
				map-get($component-expander, btn-secondary),
				()
			);

			@include clay-button-variant($btn-secondary);
		}
	}

	.custom-control {
		$custom-control: setter(
			map-get($cadmin-treeview-dark, custom-control),
			()
		);

		@include clay-css($custom-control);
	}

	.treeview-group {
		$group: setter(map-get($cadmin-treeview-dark, treeview-group), ());

		@include clay-css($group);
	}

	.treeview-item {
		$item: setter(map-get($cadmin-treeview-dark, treeview-item), ());

		@include clay-css($item);

		&:last-child {
			$last-child: setter(map-get($item, last-child), ());

			@include clay-css($last-child);
		}
	}

	.treeview-link {
		$link: setter(map-get($cadmin-treeview-dark, link), ());

		@include clay-link($link);
	}

	.component-action {
		$component-action: setter(
			map-get($cadmin-treeview-dark, component-action),
			()
		);

		@include clay-button-variant($component-action);
	}

	.component-icon {
		$component-icon: setter(
			map-get($cadmin-treeview-dark, component-icon),
			()
		);

		@include clay-css($component-icon);
	}

	.component-text {
		$component-text: setter(
			map-get($cadmin-treeview-dark, component-text),
			()
		);

		@include clay-css($component-text);
	}
}
